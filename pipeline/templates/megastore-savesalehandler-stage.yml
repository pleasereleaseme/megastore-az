parameters:
  job_name: ''
  db_password: ''

jobs:
  - deployment: ${{ parameters.job_name }}
    displayName: ${{ parameters.job_name }}
    environment: $(environment_name)
    strategy:
      runOnce:
        deploy:
          steps:          
            - template: download-kubeconfig-file.yml

            - script: kubectl --kubeconfig $AGENT_TEMPDIRECTORY/config create secret generic db.connection --from-literal=DB_CONNECTION_STRING="Server=tcp:$DB_SERVER_NAME.database.windows.net,1433;Initial Catalog=$SYSTEM_STAGENAME;Persist Security Info=False;User ID=sales_user_$SYSTEM_STAGENAME;Password=$DBPASSWORD_ENV;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;" --namespace=$SYSTEM_STAGENAME --dry-run -o yaml |  kubectl --kubeconfig $AGENT_TEMPDIRECTORY/config apply -f -
              env:
                DBPASSWORD_ENV: ${{parameters.db_password}}
              displayName: 'add or update DB_CONNECTION_STRING for namespace'   

            - script: kubectl --kubeconfig $AGENT_TEMPDIRECTORY/config apply -f $PIPELINE_WORKSPACE/k8s/megastore-savesalehandler-deployment.yaml --namespace=$SYSTEM_STAGENAME
              displayName: 'apply deployment for stage'

            - script: kubectl --kubeconfig $AGENT_TEMPDIRECTORY/config set image deployment/megastore-savesalehandler-deployment megastoresavesalehandler=$ACR_NAME.azurecr.io/megastoresavesalehandler:$BUILD_BUILDNUMBER --namespace=$SYSTEM_STAGENAME
              displayName: 'set image for stage'       